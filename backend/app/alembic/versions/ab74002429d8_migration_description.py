"""migration description

Revision ID: ab74002429d8
Revises: 
Create Date: 2025-10-25 13:32:39.431369

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ab74002429d8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('devices',
    sa.Column('device_id', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('device_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('device_name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('firmware_version', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('battery_level', sa.Integer(), nullable=True),
    sa.Column('connection_status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('last_seen_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('device_id')
    )
    op.create_table('users',
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('nickname', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('preferred_foot', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('level', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('level_description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('total_skiing_days', sa.Integer(), nullable=False),
    sa.Column('total_skiing_hours', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_skiing_sessions', sa.Integer(), nullable=False),
    sa.Column('average_speed', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=True)
    op.create_table('device_calibrations',
    sa.Column('calibration_step', sa.Integer(), nullable=False),
    sa.Column('calibration_status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('device_id', sa.Uuid(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('acc_offset_x', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('acc_offset_y', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('acc_offset_z', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('gyro_offset_x', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('gyro_offset_y', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('gyro_offset_z', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('mag_offset_x', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('mag_offset_y', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('mag_offset_z', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('calibration_accuracy', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('calibration_data', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_device_calibrations_device_id'), 'device_calibrations', ['device_id'], unique=False)
    op.create_index(op.f('ix_device_calibrations_user_id'), 'device_calibrations', ['user_id'], unique=False)
    op.create_table('item',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('skiing_sessions',
    sa.Column('session_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('location_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('session_status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('device_id', sa.Uuid(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('max_edge_angle', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('edge_time_ratio', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('total_distance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('max_speed', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('average_speed', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('weather_condition', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('snow_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('difficulty_level', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('slope_condition', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('temperature', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('wind_speed', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('session_metadata', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_skiing_sessions_device_id'), 'skiing_sessions', ['device_id'], unique=False)
    op.create_index(op.f('ix_skiing_sessions_user_id'), 'skiing_sessions', ['user_id'], unique=False)
    op.create_table('user_auth',
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('verification_code', sqlmodel.sql.sqltypes.AutoString(length=6), nullable=True),
    sa.Column('code_attempts', sa.Integer(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('code_expires_at', sa.DateTime(), nullable=True),
    sa.Column('last_attempt_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_auth_user_id'), 'user_auth', ['user_id'], unique=False)
    op.create_table('user_devices',
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('device_id', sa.Uuid(), nullable=False),
    sa.Column('connected_at', sa.DateTime(), nullable=True),
    sa.Column('disconnected_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_devices_device_id'), 'user_devices', ['device_id'], unique=False)
    op.create_index(op.f('ix_user_devices_user_id'), 'user_devices', ['user_id'], unique=False)
    op.create_table('user_sessions',
    sa.Column('session_token', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_activity_at', sa.DateTime(), nullable=False),
    sa.Column('device_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('device_model', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('os_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('os_version', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('app_version', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('device_info', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_token')
    )
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    op.create_table('ai_analyses',
    sa.Column('analysis_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('performance_evaluation', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('improvement_points', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('advanced_suggestions', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('technical_insights', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('confidence_score', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('avg_edge_angle', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('turn_count', sa.Integer(), nullable=True),
    sa.Column('technique_score', sa.Numeric(precision=3, scale=1), nullable=True),
    sa.Column('balance_score', sa.Numeric(precision=3, scale=1), nullable=True),
    sa.Column('speed_consistency', sa.Numeric(precision=3, scale=1), nullable=True),
    sa.Column('edge_control_score', sa.Numeric(precision=3, scale=1), nullable=True),
    sa.Column('turn_quality_score', sa.Numeric(precision=3, scale=1), nullable=True),
    sa.Column('analysis_data', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['skiing_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_analyses_session_id'), 'ai_analyses', ['session_id'], unique=False)
    op.create_index(op.f('ix_ai_analyses_user_id'), 'ai_analyses', ['user_id'], unique=False)
    op.create_table('gps_data',
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Numeric(precision=10, scale=8), nullable=False),
    sa.Column('longitude', sa.Numeric(precision=11, scale=8), nullable=False),
    sa.Column('altitude', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('speed', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('accuracy', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('device_id', sa.Uuid(), nullable=False),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['skiing_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gps_data_device_id'), 'gps_data', ['device_id'], unique=False)
    op.create_index(op.f('ix_gps_data_session_id'), 'gps_data', ['session_id'], unique=False)
    op.create_index(op.f('ix_gps_data_user_id'), 'gps_data', ['user_id'], unique=False)
    op.create_table('imu_data',
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('acc_x', sa.Numeric(precision=10, scale=6), nullable=False),
    sa.Column('acc_y', sa.Numeric(precision=10, scale=6), nullable=False),
    sa.Column('acc_z', sa.Numeric(precision=10, scale=6), nullable=False),
    sa.Column('gyro_x', sa.Numeric(precision=10, scale=6), nullable=False),
    sa.Column('gyro_y', sa.Numeric(precision=10, scale=6), nullable=False),
    sa.Column('gyro_z', sa.Numeric(precision=10, scale=6), nullable=False),
    sa.Column('mag_x', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('mag_y', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('mag_z', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('quaternion_w', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('quaternion_x', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('quaternion_y', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('quaternion_z', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('euler_x', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('euler_y', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('euler_z', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('temperature', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('battery_level', sa.Integer(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('device_id', sa.Uuid(), nullable=False),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['skiing_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_imu_data_device_id'), 'imu_data', ['device_id'], unique=False)
    op.create_index(op.f('ix_imu_data_session_id'), 'imu_data', ['session_id'], unique=False)
    op.create_index(op.f('ix_imu_data_user_id'), 'imu_data', ['user_id'], unique=False)
    op.create_table('skiing_metrics',
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('edge_angle', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('edge_angle_front', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('edge_angle_back', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('edge_angle_speed', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('edge_angle_speed_front', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('edge_angle_speed_back', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('edge_displacement', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('edge_displacement_front', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('edge_displacement_back', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('edge_time_ratio', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('edge_duration_seconds', sa.Integer(), nullable=True),
    sa.Column('turn_detected', sa.Boolean(), nullable=False),
    sa.Column('turn_direction', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('turn_radius', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('turn_duration_seconds', sa.Integer(), nullable=True),
    sa.Column('speed_kmh', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('slope_angle', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('device_id', sa.Uuid(), nullable=False),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['skiing_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_skiing_metrics_device_id'), 'skiing_metrics', ['device_id'], unique=False)
    op.create_index(op.f('ix_skiing_metrics_session_id'), 'skiing_metrics', ['session_id'], unique=False)
    op.create_index(op.f('ix_skiing_metrics_user_id'), 'skiing_metrics', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_skiing_metrics_user_id'), table_name='skiing_metrics')
    op.drop_index(op.f('ix_skiing_metrics_session_id'), table_name='skiing_metrics')
    op.drop_index(op.f('ix_skiing_metrics_device_id'), table_name='skiing_metrics')
    op.drop_table('skiing_metrics')
    op.drop_index(op.f('ix_imu_data_user_id'), table_name='imu_data')
    op.drop_index(op.f('ix_imu_data_session_id'), table_name='imu_data')
    op.drop_index(op.f('ix_imu_data_device_id'), table_name='imu_data')
    op.drop_table('imu_data')
    op.drop_index(op.f('ix_gps_data_user_id'), table_name='gps_data')
    op.drop_index(op.f('ix_gps_data_session_id'), table_name='gps_data')
    op.drop_index(op.f('ix_gps_data_device_id'), table_name='gps_data')
    op.drop_table('gps_data')
    op.drop_index(op.f('ix_ai_analyses_user_id'), table_name='ai_analyses')
    op.drop_index(op.f('ix_ai_analyses_session_id'), table_name='ai_analyses')
    op.drop_table('ai_analyses')
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_user_devices_user_id'), table_name='user_devices')
    op.drop_index(op.f('ix_user_devices_device_id'), table_name='user_devices')
    op.drop_table('user_devices')
    op.drop_index(op.f('ix_user_auth_user_id'), table_name='user_auth')
    op.drop_table('user_auth')
    op.drop_index(op.f('ix_skiing_sessions_user_id'), table_name='skiing_sessions')
    op.drop_index(op.f('ix_skiing_sessions_device_id'), table_name='skiing_sessions')
    op.drop_table('skiing_sessions')
    op.drop_table('item')
    op.drop_index(op.f('ix_device_calibrations_user_id'), table_name='device_calibrations')
    op.drop_index(op.f('ix_device_calibrations_device_id'), table_name='device_calibrations')
    op.drop_table('device_calibrations')
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.drop_table('users')
    op.drop_table('devices')
    # ### end Alembic commands ###
