"""Add skiing app models - user auth, device management, skiing sessions and sensor data

Revision ID: bab2be67319b
Revises: 1a31ce608336
Create Date: 2025-09-09 01:40:45.054399

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'bab2be67319b'
down_revision = '1a31ce608336'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('devices',
    sa.Column('device_id', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('device_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('device_name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('firmware_version', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('battery_level', sa.Integer(), nullable=True),
    sa.Column('connection_status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('last_seen_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('device_id')
    )
    op.create_table('users',
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('nickname', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('preferred_foot', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('level', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('level_description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('total_skiing_days', sa.Integer(), nullable=False),
    sa.Column('total_skiing_hours', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_skiing_sessions', sa.Integer(), nullable=False),
    sa.Column('average_speed', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=True)
    op.create_table('device_calibrations',
    sa.Column('calibration_step', sa.Integer(), nullable=False),
    sa.Column('calibration_status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('device_id', sa.Uuid(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_device_calibrations_device_id'), 'device_calibrations', ['device_id'], unique=False)
    op.create_index(op.f('ix_device_calibrations_user_id'), 'device_calibrations', ['user_id'], unique=False)
    op.create_table('skiing_sessions',
    sa.Column('session_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('weather_conditions', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('snow_conditions', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('difficulty_level', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('session_status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('device_id', sa.Uuid(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('total_distance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('max_speed', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('avg_speed', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_skiing_sessions_device_id'), 'skiing_sessions', ['device_id'], unique=False)
    op.create_index(op.f('ix_skiing_sessions_user_id'), 'skiing_sessions', ['user_id'], unique=False)
    op.create_table('user_auth',
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('verification_code', sqlmodel.sql.sqltypes.AutoString(length=6), nullable=True),
    sa.Column('code_attempts', sa.Integer(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('code_expires_at', sa.DateTime(), nullable=True),
    sa.Column('last_attempt_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_auth_user_id'), 'user_auth', ['user_id'], unique=False)
    op.create_table('user_devices',
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('device_id', sa.Uuid(), nullable=False),
    sa.Column('connected_at', sa.DateTime(), nullable=True),
    sa.Column('disconnected_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_devices_device_id'), 'user_devices', ['device_id'], unique=False)
    op.create_index(op.f('ix_user_devices_user_id'), 'user_devices', ['user_id'], unique=False)
    op.create_table('user_sessions',
    sa.Column('session_token', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_activity_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_token')
    )
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    op.create_table('gps_data',
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('latitude', sa.Numeric(precision=10, scale=7), nullable=False),
    sa.Column('longitude', sa.Numeric(precision=10, scale=7), nullable=False),
    sa.Column('altitude', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('speed', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('heading', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('accuracy', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('device_id', sa.Uuid(), nullable=False),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['skiing_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gps_data_device_id'), 'gps_data', ['device_id'], unique=False)
    op.create_index(op.f('ix_gps_data_session_id'), 'gps_data', ['session_id'], unique=False)
    op.create_index(op.f('ix_gps_data_user_id'), 'gps_data', ['user_id'], unique=False)
    op.create_table('imu_data',
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('accel_x', sa.Numeric(precision=10, scale=6), nullable=False),
    sa.Column('accel_y', sa.Numeric(precision=10, scale=6), nullable=False),
    sa.Column('accel_z', sa.Numeric(precision=10, scale=6), nullable=False),
    sa.Column('gyro_x', sa.Numeric(precision=10, scale=6), nullable=False),
    sa.Column('gyro_y', sa.Numeric(precision=10, scale=6), nullable=False),
    sa.Column('gyro_z', sa.Numeric(precision=10, scale=6), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('device_id', sa.Uuid(), nullable=False),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['skiing_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_imu_data_device_id'), 'imu_data', ['device_id'], unique=False)
    op.create_index(op.f('ix_imu_data_session_id'), 'imu_data', ['session_id'], unique=False)
    op.create_index(op.f('ix_imu_data_user_id'), 'imu_data', ['user_id'], unique=False)
    op.create_table('skiing_metrics',
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('metric_type', sqlmodel.sql.sqltypes.AutoString(length=30), nullable=False),
    sa.Column('metric_value', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('unit', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('device_id', sa.Uuid(), nullable=False),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['skiing_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_skiing_metrics_device_id'), 'skiing_metrics', ['device_id'], unique=False)
    op.create_index(op.f('ix_skiing_metrics_session_id'), 'skiing_metrics', ['session_id'], unique=False)
    op.create_index(op.f('ix_skiing_metrics_user_id'), 'skiing_metrics', ['user_id'], unique=False)
    op.drop_index('ix_user_email', table_name='user')
    op.drop_table('user')
    op.drop_constraint('item_owner_id_fkey', 'item', type_='foreignkey')
    op.create_foreign_key(None, 'item', 'users', ['owner_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'item', type_='foreignkey')
    op.create_foreign_key('item_owner_id_fkey', 'item', 'user', ['owner_id'], ['id'], ondelete='CASCADE')
    op.create_table('user',
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey')
    )
    op.create_index('ix_user_email', 'user', ['email'], unique=True)
    op.drop_index(op.f('ix_skiing_metrics_user_id'), table_name='skiing_metrics')
    op.drop_index(op.f('ix_skiing_metrics_session_id'), table_name='skiing_metrics')
    op.drop_index(op.f('ix_skiing_metrics_device_id'), table_name='skiing_metrics')
    op.drop_table('skiing_metrics')
    op.drop_index(op.f('ix_imu_data_user_id'), table_name='imu_data')
    op.drop_index(op.f('ix_imu_data_session_id'), table_name='imu_data')
    op.drop_index(op.f('ix_imu_data_device_id'), table_name='imu_data')
    op.drop_table('imu_data')
    op.drop_index(op.f('ix_gps_data_user_id'), table_name='gps_data')
    op.drop_index(op.f('ix_gps_data_session_id'), table_name='gps_data')
    op.drop_index(op.f('ix_gps_data_device_id'), table_name='gps_data')
    op.drop_table('gps_data')
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_user_devices_user_id'), table_name='user_devices')
    op.drop_index(op.f('ix_user_devices_device_id'), table_name='user_devices')
    op.drop_table('user_devices')
    op.drop_index(op.f('ix_user_auth_user_id'), table_name='user_auth')
    op.drop_table('user_auth')
    op.drop_index(op.f('ix_skiing_sessions_user_id'), table_name='skiing_sessions')
    op.drop_index(op.f('ix_skiing_sessions_device_id'), table_name='skiing_sessions')
    op.drop_table('skiing_sessions')
    op.drop_index(op.f('ix_device_calibrations_user_id'), table_name='device_calibrations')
    op.drop_index(op.f('ix_device_calibrations_device_id'), table_name='device_calibrations')
    op.drop_table('device_calibrations')
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.drop_table('users')
    op.drop_table('devices')
    # ### end Alembic commands ###
